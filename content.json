{"meta":{"title":"这是个标题","subtitle":"这是个子标题","description":"描述一下","author":"iMeiji","url":"https://imeiji.github.io"},"pages":[{"title":"","date":"2015-12-26T03:17:03.000Z","updated":"2017-01-09T07:42:18.956Z","comments":false,"path":"categories/index.html","permalink":"https://imeiji.github.io/categories/index.html","excerpt":"","text":""},{"title":"Hello World","date":"2015-12-25T06:10:54.000Z","updated":"2015-12-26T06:25:37.666Z","comments":true,"path":"resume/index.html","permalink":"https://imeiji.github.io/resume/index.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}],"posts":[{"title":"常见排序算法 - Java实现","slug":"常见排序算法 - Java实现","date":"2017-10-21T06:10:54.000Z","updated":"2017-10-20T17:18:56.263Z","comments":true,"path":"2017/10/21/常见排序算法 - Java实现/","link":"","permalink":"https://imeiji.github.io/2017/10/21/常见排序算法 - Java实现/","excerpt":"","text":"总结常见的排序算法，重新学习。 冒泡排序（Bubble Sort） 我想对于它每个学过C语言的都会了解，这可能是很多人接触的第一个排序算法。 基本思想 冒泡排序（Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 算法描述 比较相邻的元素，如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。 针对所有的元素重复以上的步骤，除了最后一个。 持续每次对越来越少的元素重复上面的步骤1~3，直到没有任何一对数字需要比较。 代码实现 冒泡排序需要两个嵌套的循环. 其中, 外层循环移动游标; 内层循环遍历游标及之后(或之前)的元素, 通过两两交换的方式, 每次只确保该内循环结束位置排序正确, 然后内层循环周期结束, 交由外层循环往后(或前)移动游标, 随即开始下一轮内层循环, 以此类推, 直至循环结束。 12345678910111213141516171819202122/** * 冒泡排序 * &lt;p&gt; * 1. 比较相邻的元素。如果第一个比第二个大，就交换他们两个。 * 2. 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。 * 3. 针对所有的元素重复以上的步骤，除了最后一个。 * 4. 持续每次对越来越少的元素重复上面的步骤①~③，直到没有任何一对数字需要比较。 * * @param arr 待排序数组 */public static void bubbleSort(int[] arr) &#123; for (int i = arr.length - 1; i &gt; 0; i--) &#123; //外层循环移动游标 for (int j = 0; j &lt; i; j++) &#123; //内层循环遍历游标及之后(或之前)的元素 if (arr[j] &gt; arr[j + 1]) &#123; int temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; &#125; &#125; System.out.println(\"Sorting: \" + Arrays.toString(arr)); &#125;&#125; 小结 冒泡排序算法复杂度: | 平均时间复杂度 | 最好情况 | 最坏情况 | 空间复杂度 || ——- | —- | —– | —– || O(n²) | O(n) | O(n²) | O(1) | 若文件初状为正序，则一趟起泡就可完成排序，排序码的比较次数为n-1，且没有记录移动，时间复杂度是O(n) 若文件初态为逆序，则需要n-1趟起泡，每趟进行n-i次排序码的比较，且每次比较都移动三次，比较和移动次数均达到最大值 O(n2) 起泡排序平均时间复杂度为O(n2) 注意：由于冒泡排序只在相邻元素大小不符合要求时才调换他们的位置，它并不改变相同元素之间的相对顺序，因此它是稳定的排序算法 选择排序（Selection Sort） 基本思想 选择排序的基本思想：比较 + 交换。 在未排序序列中找到最小（大）元素，存放到未排序序列的起始位置。在所有的完全依靠交换去移动元素的排序方法中，选择排序属于非常好的一种。 算法描述 从待排序序列中，找到关键字最小的元素； 如果最小元素不是待排序序列的第一个元素，将其和第一个元素互换； 从余下的 N - 1 个元素中，找出关键字最小的元素，重复1、2步，直到排序结束。 代码实现 选择排序比较简单，以下是我自己的实现，跟官方版差不多，所以完全可以参考。 12345678910111213141516171819202122232425/** * 选择排序 * * 1. 从待排序序列中，找到关键字最小的元素； * 2. 如果最小元素不是待排序序列的第一个元素，将其和第一个元素互换； * 3. 从余下的 N - 1 个元素中，找出关键字最小的元素，重复1、2步，直到排序结束。 * 仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。 * @param arr 待排序数组 */public static void selectionSort(int[] arr)&#123; for(int i = 0; i &lt; arr.length - 1; i++)&#123; int min = i; for(int j = i+1; j &lt; arr.length; j++)&#123; //选出之后待排序中值最小的位置 if(arr[j] &lt; arr[min])&#123; min = j; &#125; &#125; if(min != i)&#123; int temp = arr[min]; //交换操作 arr[min] = arr[i]; arr[i] = temp; System.out.println(\"Sorting: \" + Arrays.toString(arr)); &#125; &#125;&#125; 小结 以下是选择排序复杂度: | 平均时间复杂度 | 最好情况 | 最坏情况 | 空间复杂度 || ——- | —– | —– | —– || O(n²) | O(n²) | O(n²) | O(1) | 选择排序的简单和直观名副其实，这也造就了它”出了名的慢性子”，无论是哪种情况，哪怕原数组已排序完成，它也将花费将近 n²/2 次遍历来确认一遍。其实选择排序可以看成冒泡排序的优化，因为其目的相同，只是选择排序只有在确定了最小数的前提下才进行交换，大大减少了交换的次数。 所以结论是选择排序和冒泡排序一样，都是 O(n²) 的效率，但选择排序无疑更快，因为它交换的次数更少。 注意：选择排序是不稳定的排序 直接插入排序（Direct Insertion Sort）插入排序的设计初衷是往有序的数组中快速插入一个新的元素。它的算法思想是：把要排序的数组分为了两个部分, 一部分是数组的全部元素(除去待插入的元素), 另一部分是待插入的元素; 先将第一部分排序完成, 然后再插入这个元素. 其中第一部分的排序也是通过再次拆分为两部分来进行的. 插入排序由于操作不尽相同, 可分为 直接插入排序 , 折半插入排序(又称二分插入排序), 链表插入排序 , 希尔排序 。我们先来看下直接插入排序。 基本思想 直接插入排序的基本思想是：将数组中的所有元素依次跟前面已经排好的元素相比较，如果选择的元素比已排序的元素小，则交换，直到全部元素都比较过为止。 算法描述 一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下： 从第一个元素开始，该元素可以认为已经被排序 取出下一个元素，在已经排序的元素序列中从后向前扫描 如果该元素（已排序）大于新元素，将该元素移到下一位置 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置 将新元素插入到该位置后 重复步骤2~5 如果比较操作的代价比交换操作大的话，可以采用二分查找法来减少比较操作的数目。该算法可以认为是插入排序的一个变种，称为二分查找插入排序。 代码实现 12345678910111213141516171819202122232425/** * 插入排序 * &lt;p&gt; * 1. 从第一个元素开始，该元素可以认为已经被排序 * 2. 取出下一个元素，在已经排序的元素序列中从后向前扫描 * 3. 如果该元素（已排序）大于新元素，将该元素移到下一位置 * 4. 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置 * 5. 将新元素插入到该位置后 * 6. 重复步骤2~5 * * @param arr 待排序数组 */public static void DirectInsertionSort(int[] arr) &#123; for (int i = 0; i &lt; arr.length - 1; i++) &#123; for (int j = i + 1; j &gt; 0; j--) &#123; if (arr[j - 1] &lt;= arr[j]) &#123; break; &#125; int temp = arr[j]; //交换操作 arr[j] = arr[j - 1]; arr[j - 1] = temp; System.out.println(\"Sorting: \" + Arrays.toString(arr)); &#125; &#125;&#125; 小结 直接插入排序复杂度如下： | 平均时间复杂度 | 最好情况 | 最坏情况 | 空间复杂度 || ——- | —- | —– | —– || O(n²) | O(n) | O(n²) | O(1) |文件初态不同时，直接插入排序所耗费的时间有很大差异。若文件初态为正序，则每个待插入的记录只需要比较一次就能够找到合适的位置插入，故算法的时间复杂度为O(n)，这时最好的情况。若初态为反序，则第i个待插入记录需要比较i+1次才能找到合适位置插入，故时间复杂度为O(n2)，这时最坏的情况。 注意： 由于直接插入排序每次只移动一个元素的位，并不会改变值相同的元素之间的排序， 因此它是一种稳定排序。 快速排序（Quick Sort）快速排序（Quicksort）是对冒泡排序的一种改进，借用了分治的思想，由C. A. R. Hoare在1962年提出。 基本思想 快速排序的基本思想：挖坑填数+分治法。 首先选一个轴值(pivot，也有叫基准的)，通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。 算法描述 快速排序使用分治策略来把一个序列（list）分为两个子序列（sub-lists）。步骤为： 从数列中挑出一个元素，称为”基准”（pivot）。 重新排序数列，所有比基准值小的元素摆放在基准前面，所有比基准值大的元素摆在基准后面（相同的数可以到任一边）。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。 递归地（recursively）把小于基准值元素的子数列和大于基准值元素的子数列排序。 递归到最底部时，数列的大小是零或一，也就是已经排序好了。这个算法一定会结束，因为在每次的迭代（iteration）中，它至少会把一个元素摆到它最后的位置去。 代码实现 1234567891011121314151617181920212223242526272829303132/** * 快速排序（递归） * * 1. 从数列中挑出一个元素，称为\"基准\"（pivot）。 * 2. 重新排序数列，所有比基准值小的元素摆放在基准前面，所有比基准值大的元素摆在基准后面（相同的数可以到任一边）。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。 * 3. 递归地（recursively）把小于基准值元素的子数列和大于基准值元素的子数列排序。 * @param arr 待排序数组 * @param low 左边界 * @param high 右边界 */public static void quickSort(int[] arr, int low, int high)&#123; if(arr.length &lt;= 0) return; if(low &gt;= high) return; int left = low; int right = high; int temp = arr[left]; //挖坑1：保存基准的值 while (left &lt; right)&#123; while(left &lt; right &amp;&amp; arr[right] &gt;= temp)&#123; //坑2：从后向前找到比基准小的元素，插入到基准位置坑1中 right--; &#125; arr[left] = arr[right]; while(left &lt; right &amp;&amp; arr[left] &lt;= temp)&#123; //坑3：从前往后找到比基准大的元素，放到刚才挖的坑2中 left++; &#125; arr[right] = arr[left]; &#125; arr[left] = temp; //基准值填补到坑3中，准备分治递归快排 System.out.println(\"Sorting: \" + Arrays.toString(arr)); quickSort(arr, low, left-1); quickSort(arr, left+1, high);&#125; 小结 快速排序是通常被认为在同数量级（O(nlog₂n)）的排序方法中平均性能最好的。但若初始序列按关键码有序或基本有序时，快排序反而蜕化为冒泡排序。为改进之，通常以“三者取中法”来选取基准记录，即将排序区间的两个端点与中点三个记录关键码居中的调整为支点记录。快速排序是一个不稳定的排序方法。 以下是快速排序算法复杂度: | 平均时间复杂度 | 最好情况 | 最坏情况 | 空间复杂度 || ——— | ——— | —– | ————- || O(nlog₂n) | O(nlog₂n) | O(n²) | O(1)（原地分区递归版） | 快速排序排序效率非常高。 虽然它运行最糟糕时将达到 O(n²) 的时间复杂度, 但通常平均来看, 它的时间复杂为 O(nlog₂n) ，比同样为 O(nlog₂n) 时间复杂度的归并排序还要快。快速排序似乎更偏爱乱序的数列， 越是乱序的数列， 它相比其他排序而言，相对效率更高。 注意：同选择排序相似, 快速排序每次交换的元素都有可能不是相邻的, 因此它有可能打破原来值为相同的元素之间的顺序. 因此, 快速排序并不稳定.","categories":[{"name":"Java","slug":"Java","permalink":"https://imeiji.github.io/categories/Java/"}],"tags":[]},{"title":"Android 仿知乎分享控件","slug":"Android 仿知乎分享控件","date":"2017-10-02T06:10:54.000Z","updated":"2017-10-02T10:22:47.836Z","comments":true,"path":"2017/10/02/Android 仿知乎分享控件/","link":"","permalink":"https://imeiji.github.io/2017/10/02/Android 仿知乎分享控件/","excerpt":"","text":"使用 BottomSheetDialog 实现仿知乎分享控件主要步骤： 首先获取手机内所有支持分享的应用，得到 ResolveInfo 对象，利用反射获取应用图标等信息 然后用 RecyclerView 的 GridLayoutManager 网格布局展示，自己实现点击事件就差不多完成了 截图 简单实现 写一个分享界面的布局 12345678910111213141516171819202122232425&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\"&gt; &lt;TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:padding=\"16dp\" android:text=\"我是广告栏\" android:textAppearance=\"@style/TextAppearance.AppCompat\" android:textSize=\"18sp\"/&gt; &lt;View android:layout_width=\"match_parent\" android:layout_height=\"1px\" android:background=\"@android:color/darker_gray\"/&gt; &lt;android.support.v7.widget.RecyclerView android:id=\"@+id/list_view\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"/&gt;&lt;/LinearLayout&gt; 在 Activity 里使用 BottomSheetDialog 控件显示 123BottomSheetDialog mBottomSheetDialog = new BottomSheetDialog(this);mBottomSheetDialog.setContentView(R.layout.dialog_bottom_sheet);mBottomSheetDialog.show(); 写一个 RecyclerViewAdapter 和 appinfo_item 布局 123456789101112131415161718192021222324&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:gravity=\"center\" android:orientation=\"vertical\"&gt; &lt;ImageView android:id=\"@+id/img_list_item\" android:layout_width=\"48dp\" android:layout_height=\"48dp\" android:scaleType=\"centerCrop\" tools:src=\"@mipmap/ic_launcher\"/&gt; &lt;TextView android:id=\"@+id/text_list_item\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"2dp\" android:ellipsize=\"end\" android:singleLine=\"true\" tools:text=\"分享11111111111111\"/&gt;&lt;/LinearLayout&gt; 获取手机内所有支持分享的应用列表 123456public static List&lt;ResolveInfo&gt; getShareApps(Context context, Intent intent) &#123; List&lt;ResolveInfo&gt; resolveInfoList; PackageManager pm = context.getPackageManager(); resolveInfoList = pm.queryIntentActivities(intent, PackageManager.COMPONENT_ENABLED_STATE_DEFAULT); return resolveInfoList; &#125; 返回数据给 Activity，然后设置 Adapter 就差不多完成，详细代码见 ZhihuShareDialog 缺点 通过 PackageManager 的 queryIntentActivities 方法获取到的应用是按照应用安装的先后顺序，而 Lollipop(5.0) 开始原生分享已支持自动把常用应用排在最顶部。当然也可以自己实现应用的排序，但比较折腾，可参考源码 ResolverActivity ​ 优点 可以自定义分享界面，比如像知乎那样添加广告栏，设计一套属于自己的 UI ，设置应用的排列顺序等等 源码下载地址 ： https://github.com/iMeiji/ZhihuShareDialog","categories":[{"name":"Android","slug":"Android","permalink":"https://imeiji.github.io/categories/Android/"}],"tags":[]},{"title":"OpenConnect VPN server","slug":"OpenConnect VPN server","date":"2017-09-16T06:10:54.000Z","updated":"2017-10-02T10:10:23.752Z","comments":true,"path":"2017/09/16/OpenConnect VPN server/","link":"","permalink":"https://imeiji.github.io/2017/09/16/OpenConnect VPN server/","excerpt":"","text":"OpenConnet Server（ocserv）是通过实现Cisco的AnyConnect协议，用DTLS作为主要的加密传输协议。我认为它的主要好处在于—— AnyConnect的VPN协议默认使用UDP DTLS作为数据传输，但如果有什么网络问题导致UDP传输出现问题，它会利用最初建立的TCP TLS通道作为备份通道，降低VPN断开的概率。 AnyConnect作为Cisco新一代的VPN解决方案，被用于许多大型企业，这些企业依赖它提供正常的商业运作，这些正常运作对应的经济效益（读作GDP），是我们最好的伙伴。 OpenConnet的架设足够麻烦，我的意思是，如果你不是大型企业，你会用AnyConnect的概率无限趋近于零。再者，如果它足够简单，我就不用写这篇文章了。至于它的自定义路由表支持，我觉得都是次要了。 介绍到此，让我们按步骤干好事情。 （下文选用 Debian8 和 ocser v0.11.8 作为标准环境） 配置环境 安装依赖 1apt-get install -y build-essential pkg-config libgnutls28-dev libreadline-dev libseccomp-dev libwrap0-dev libnl-nf-3-dev liblz4-dev libev-dev autogen 编译安装 12345# 查看最新版本 http://www.infradead.org/ocserv/download.htmlwget ftp://ftp.infradead.org/pub/ocserv/ocserv-0.11.8.tar.xztar xvf ocserv-*.tar.xz &amp;&amp; cd ocserv-*./configure make &amp;&amp; make install &amp;&amp; cd .. 配置 OpenConnect Server 配置证书 123安装证书工具 apt-get install gnutls-bincd ~ &amp;&amp; mkdir certificates &amp;&amp; cd certificates 在此目录下创建一个名为vi ca.tmpl 的CA证书模板，写入如下语句： 12345678cn = \"Your CA name\" organization = \"Your fancy name\" serial = 1 expiration_days = 3650ca signing_key cert_signing_key crl_signing_key 生成CA密钥和证书 12certtool --generate-privkey --outfile ca-key.pemcerttool --generate-self-signed --load-privkey ca-key.pem --template ca.tmpl --outfile ca-cert.pem 然后我们生成服务器证书vi server.tmpl，这里注意cn 项必须对应你服务器的域名或IP，内容如下： 123456cn = \"Your hostname or IP\" organization = \"Your fancy name\" expiration_days = 3650signing_key encryption_keytls_www_server 生成Server密钥和证书 12certtool --generate-privkey --outfile server-key.pemcerttool --generate-certificate --load-privkey server-key.pem --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem --template server.tmpl --outfile server-cert.pem 把证书移动到合适的地方： 123cp ca-cert.pem /etc/ssl/private/my-ca-cert.pemcp server-cert.pem /etc/ssl/private/my-server-cert.pemcp server-key.pem /etc/ssl/private/my-server-key.pem 准备配置文件 我们把配置文件放到 ocserv 默认读取的位置： 1234mkdir /etc/ocservcd ~/ocserv*cp doc/sample.config /etc/ocserv/ocserv.confvi /etc/ocserv/ocserv.conf 配置文件可以官方手册手册来写，不过这里我们重点要确保以下条目正确： 12345678910111213141516171819202122232425262728293031323334353637383940# 登陆方式，目前先用密码登录auth = \"plain[/etc/ocserv/ocpasswd]\" # 允许同时连接的客户端数量max-clients = 4 # 限制同一客户端的并行登陆数量max-same-clients = 2 # 服务监听的IP（服务器IP，可不设置）listen-host = 1.2.3.4 # 服务监听的TCP/UDP端口（选择你喜欢的数字）tcp-port = 9000udp-port = 9001 # 自动优化VPN的网络性能try-mtu-discovery = true # 确保服务器正确读取用户证书（后面会用到用户证书）cert-user-oid = 2.5.4.3 # 服务器证书与密钥ca-cert = /etc/ssl/private/my-ca-cert.pemserver-cert = /etc/ssl/private/my-server-cert.pemserver-key = /etc/ssl/private/my-server-key.pem # 客户端连上vpn后使用的dnsdns = 8.8.8.8dns = 8.8.4.4 # 注释掉所有的route，让服务器成为gateway#route = 192.168.1.0/255.255.255.0 # 启用cisco客户端兼容性支持cisco-client-compat = true#据说可以优化速度output-buffer = 23000 try-mtu-discovery = true 测试服务器 创建一个登陆用的用户名与密码ocpasswd -c /etc/ocserv/ocpasswd your-username 修改内核设置，使得支持转发，vi /etc/sysctl.conf,将net.ipv4.ip_forward=0改为net.ipv4.ip_forward=1 , 保存生效sysctl -p 查看网卡信息ifconfig用于修改防火墙开启NAT转发, 开启端口(对应上面配置的端口) 12345678iptables -t nat -A POSTROUTING -j MASQUERADEiptables -A INPUT -p tcp --dport 443 -j ACCEPTiptables -A INPUT -p udp --dport 443 -j ACCEPT# 规则保存 Ubuntuiptables-save &gt; /etc/iptables.rules# 规则保存 Debianapt-get install iptables-persistent -yservice netfilter-persistent save 使用iptables -t nat -L来验证转发是否开启成功 123456789101112Chain PREROUTING (policy ACCEPT)target prot opt source destination Chain INPUT (policy ACCEPT)target prot opt source destination Chain OUTPUT (policy ACCEPT)target prot opt source destination Chain POSTROUTING (policy ACCEPT)target prot opt source destinationMASQUERADE all -- 192.168.1.0/24 anywhere 使用 iptables -L -n 查看端口是否开启 12345678910`Chain INPUT (policy ACCEPT)target prot opt source destination ACCEPT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:443ACCEPT udp -- 0.0.0.0/0 0.0.0.0/0 udp dpt:443Chain FORWARD (policy ACCEPT)target prot opt source destination Chain OUTPUT (policy ACCEPT)target prot opt source destination 使用ocserv -f -d 1命令来启动下服务啦打开你手机上的 OpenConnect / Cisco Anyconnect 新建一个 VPN, 添加服务器 IP 就是你的 vps的IP:端口,例如X.X.X.X:443好了，如果你看到如下信息，那服务器应该已经能够正常运行了： 12345678910111213141516171819Parsing plain auth method subconfig using legacy formatSetting 'plain' as primary authentication methodlistening (TCP) on 0.0.0.0:443...listening (UDP) on 0.0.0.0:443...ocserv[16104]: main: initialized ocserv 0.11.8ocserv[16105]: sec-mod: reading supplemental config from filesocserv[16105]: sec-mod: sec-mod initialized (socket: /var/run/ocserv-socket.16104)ocserv[16109]: GnuTLS error (at worker-vpn.c:468): A TLS fatal alert has been received.: Unknown certificateocserv[16104]: main: 60.0.14.48:9890 user disconnectedocserv[16105]: sec-mod: using 'plain' authentication to authenticate user (session: FXS0l)ocserv[16104]: main: 60.0.14.48:36627 user disconnectedocserv[16105]: sec-mod: initiating session for user 'test' (session: FXS0l)ocserv[16104]: main[test]: 60.0.14.48:9663 new user sessionocserv[16104]: main[test]: 60.0.14.48:9663 user logged inocserv[16104]: main: 60.0.14.48:46429 user disconnectedocserv[16104]: main[test]: 60.0.14.48:9663 user disconnectedocserv[16105]: sec-mod: temporarily closing session for test (session: FXS0l)ocserv[16105]: sec-mod: initiating session for user 'test' (session: FXS0l)ocserv[16104]: main[test]: 60.0.14.48:38135 new user sessionocserv[16104]: main[test]: 60.0.14.48:38135 user logged in 好了，目前已经搞定了OpenConnect server，下面讲的是一些优化，创建客户端证书，智能分流 优化OpenConnectServer 制作启动脚本 首先，来写个启动脚本——毕竟，不能每次都用调试模式启动不是吗？ 1vi /etc/init.d/ocserv 在配置文件中写入如下脚本： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667#!/bin/sh### BEGIN INIT INFO# Provides: ocserv# Required-Start: $remote_fs $syslog# Required-Stop: $remote_fs $syslog# Default-Start: 2 3 4 5# Default-Stop: 0 1 6### END INIT INFO# Copyright Rene Mayrhofer, Gibraltar, 1999# This script is distibuted under the GPLPATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/sbinDAEMON=/usr/local/sbin/ocservPIDFILE=/var/run/ocserv.pidDAEMON_ARGS=&quot;-c /etc/ocserv/ocserv.conf&quot;case &quot;$1&quot; instart)if [ ! -r $PIDFILE ]; thenecho -n &quot;Starting OpenConnect VPN Server Daemon: &quot;start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\$DAEMON_ARGS &gt; /dev/nullecho &quot;ocserv.&quot;elseecho -n &quot;OpenConnect VPN Server is already running.\\n\\r&quot;exit 0fi;;stop)echo -n &quot;Stopping OpenConnect VPN Server Daemon: &quot;start-stop-daemon --stop --quiet --pidfile $PIDFILE --exec $DAEMONecho &quot;ocserv.&quot;rm -f $PIDFILE;;force-reload|restart)echo &quot;Restarting OpenConnect VPN Server: &quot;$0 stopsleep 1$0 start;;status)if [ ! -r $PIDFILE ]; then# no pid file, process doesn&apos;t seem to be running correctlyexit 3fiPID=`cat $PIDFILE | sed &apos;s/ //g&apos;`EXE=/proc/$PID/exeif [ -x &quot;$EXE&quot; ] &amp;&amp;[ &quot;`ls -l \\&quot;$EXE\\&quot; | cut -d&apos;&gt;&apos; -f2,2 | cut -d&apos; &apos; -f2,2`&quot; = \\&quot;$DAEMON&quot; ]; then# ok, process seems to be runningexit 0elif [ -r $PIDFILE ]; then# process not running, but pidfile existsexit 1else# no lock file to check for, so simply return the stopped statusexit 3fi;;*)echo &quot;Usage: /etc/init.d/ocserv &#123;start|stop|restart|force-reload|status&#125;&quot;exit 1;;esacexit 0 赋予其可执行权限 12chmod 755 /etc/init.d/ocserv`update-rc.d ocserv defaults 之后就可以使用 12/etc/init.d/ocserv start | stop | restartservice ocserv start | stop | restart 免密码登录 创建客户端证书，省的老输入密码 12cd ~/certificates/vi user.tmpl 写入如下内容： 12345cn = \"some random name\"unit = \"some random unit\"expiration_days = 365signing_keytls_www_client 生成User密钥和证书 12certtool --generate-privkey --outfile user-key.pemcerttool --generate-certificate --load-privkey user-key.pem --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem --template user.tmpl --outfile user-cert.pem 然后要将证书和密钥转为PKCS12的格式 1certtool --to-p12 --load-privkey user-key.pem --pkcs-cipher 3des-pkcs12 --load-certificate user-cert.pem --outfile user.p12 --outder 期间会要求你输入证书名字和密码。 然后你需要把这个证书放到一个可以被直接访问的地方，然后通过 URL 将 user.p12 文件导入AnyConnect，具体位置在诊断标签页的证书栏目下，导入成功之后，将对应的VPN设置的高级设置部分的证书栏目，改为导入的这张证书。 现在，为了让服务器能够认得这张证书，我们再来修改一下配置： 12345678910vi /etc/ocserv/ocserv.conf # 改为证书登陆，注释掉原来的登陆模式auth = \"certificate\" # 证书认证不支持这个选项，注释掉这行#listen-clear-file = /var/run/ocserv-conn.socket # 启用证书验证ca-cert = /etc/ssl/private/my-ca-cert.pem 这样，我们使用service ocserv restart来启动它即可！ 智能分流 编译 ocserv 前需要修改 src/vpn.h 来支持超过 96 行(ocserv默认值)但不超过200行(Cisco AnyConnect最大值)的路由表: 123vi ~/ocserv*/src/vpn.h#把96改为200以上#define DEFAULT_CONFIG_ENTRIES 96 修改 ocserv 配置文件，添加这些内容 补充:一键脚本(新) https://moeclub.org/2017/06/22/268/一键脚本 https://github.com/fanyueciyuan/eazy-for-ss/tree/master/ocservauto注意Anyconnect和速锐一起使用的话,首先要禁止掉udp-port(详细看配置文件) ,接着重启速锐 最后重启Anyconnect 参考:http://bitinn.net/11084/https://www.logcg.com/archives/1343.htmlhttp://www.fanyueciyuan.info/fq/ocserv-debian.htmlhttps://github.com/CNMan/ocserv-cn-no-route","categories":[{"name":"GFW","slug":"GFW","permalink":"https://imeiji.github.io/categories/GFW/"}],"tags":[]},{"title":"Android Studio设置教程","slug":"Android Studio设置教程","date":"2017-08-22T09:16:34.000Z","updated":"2017-08-22T14:33:41.775Z","comments":true,"path":"2017/08/22/Android Studio设置教程/","link":"","permalink":"https://imeiji.github.io/2017/08/22/Android Studio设置教程/","excerpt":"","text":"文章是很久之前就写好了, 一直没有发出来, 这篇教程比较折腾, 好处是你的系统盘不会给塞满, 我把所有配置都转移到非系统盘, 如果你的 AS 用久了可以看看 .AndroidStudio 文件夹有多大, 再考虑转移配置 下载官网 http://developer.android.com/sdk/index.html各个版本 http://tools.android.com/download/studio 环境变量请按照实际情况进行修改(Android SDK 我就没配置, 反正可以选下载路径)PATH的要特别注意, 要加到原来的后面 ADB 12Android=D:\\Users\\XXX\\AppData\\Local\\Android\\sdk\\platform-toolsPath=;%Android%; Java 1234JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_66CLASSPATH=.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar# 注意，%PATH%为原来的环境变量值，添加\";\"和后面的内容到原来值的后面PATH=%PATH%;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin Gradle 1234567# Android Studio正式版后就内置了一个Gradle，当然你也可以另外去Gradle官网下载一个GRADLE_HOME=D:\\Program Files\\android-studio\\gradle\\gradle-2.10PATH=%PATH%;%GRADLE_HOME%\\bin# 依赖仓库存放路径，平时构建工程时下载的依赖库都放在这里# 不配置的话，Windows中默认是在C:\\Users\\&lt;username&gt;\\.gradle的# 重装系统时忘记备份，又不想重新下载依赖的话，就赶紧把这里改了GRADLE_USER_HOME=D:\\Users\\XXX\\.gradle Android SDK 1234ANDROID_HOME=E:\\DevTools\\Android\\sdkPATH=%PATH%;%ANDROID_HOME%\\tools;%ANDROID_HOME%\\platform-tools# ADB端口，可以避免国内一堆软件，如酷狗音乐啥的把ADB端口抢占了，值随便改个不常用的就行ANDROID_ADB_SERVER_PORT=7123 Android Studio 本来是用默认路径也没什么问题，不过在 Windows 环境下，什么东西都往系统盘里塞老是让人觉得不舒服 修改 idea.properties 文件 进入 Android Studio 的安装目录, 进入bin文件夹 ,打开 idea.properties , 修改对应的路径为新路径即可. (PS: 如果你的 idea.properties 文件文件没有以下内容, 点这里下载一个, 覆盖到bin文件夹) 1234idea.config.path=D:/Users/XXX/.AndroidStudio/configidea.system.path=D:/Users/XXX/.AndroidStudio/systemidea.plugins.path=$&#123;idea.system.path&#125;/pluginsidea.log.path=$&#123;idea.system.path&#125;/log 注意plugins和log的路径不要乱改, 不然插件会安装不上这种方式改完之后问题是解决了, 可是之后你在增量升级 AS 的时候就会发现总是失败, 原因就是因为你改了 bin 目录下的 idea.properties 文件, 那么 Google 给出的解决办法就是不要直接改 bin 目录下的 idea.properties 文件, 而是在 %USERPROFILE%\\.{FOLDER_NAME}\\ 目录下创建一个空的idea.properties 文件, 把修改过的 idea.properties 文件复制到这里 .android 文件夹的修改 这个文件夹是由 Android SDK 配置模拟器生成的, 也是最占空间的一个首先, 需要添加一个系统的环境变量变量名ANDROID_SDK_HOME变量值D:\\Users\\XXX 设置Android Studio不要急着新建工程,先Configure→Settings去修改设置 修改主题,全局字体 主题默认就好,个人不喜欢深色主题,字体选Microsoft YaHei UI就不错了 ​ 禁止自动打开上次的工程 ​ 设置代理 ​ SDK目录 快捷键 不推荐使用 Eclipse 快捷键了, 很多功能会缺失, 强烈建议使用 IDEA 的快捷键 鼠标悬停显示文档, 格式化&amp;导包提示 鼠标指针悬停若干时间, 显示文档, 时间自己改 就是按格式化代码或者导包时, 是否会显示个对话框 自动导包 显示行号, 显示方法分隔线 代码智能提示 敲什么字符会提示 All 大小写全部符合 None 不管大小写, 符合就提示 First letter 第一个字符符合就OK, 其他随意 自动弹出时间自己改下 ​ 代码样式配置 修改注释位置, 禁用“语句堆一行” Line breaks: 启用的话, 表示保持断行 Comment at frist column: 启用的话, 注释符号就会在行首, 否则就按照缩进来注释 Control statement in one line: 格式化代码的时候, 会把些很短的语句合并成一行. 我觉得这样影响代码可读性, 故取消 Ensure right margin is not exceeded: 表示代码超过标准线就自动换行 修改新建文件文件头 修改文件编码为UTF-8 修改Gradle目录 开启Instant Run 到此已经配置好 AS , 新建一个工程试试吧为了保险, 打开Android Studio内置的终端, 在输入如下命令查看 gradle 版本:gradlew -v配置没问题的话就显示你的 gradle 版本, 如果你配置错误 AS 会自动下载并安装个 gradle 补充IDEA主题 参考自定义androidstudio的配置文件目录后，无法正常安装和卸载插件，是何原因？ - 知乎","categories":[{"name":"Android","slug":"Android","permalink":"https://imeiji.github.io/categories/Android/"}],"tags":[]},{"title":"Windows 软件清单","slug":"Windows 软件清单","date":"2017-07-09T16:22:01.000Z","updated":"2017-07-09T17:09:31.087Z","comments":true,"path":"2017/07/10/Windows 软件清单/","link":"","permalink":"https://imeiji.github.io/2017/07/10/Windows 软件清单/","excerpt":"","text":"记录下自己常用的软件, 整理软件清单, 便于后续持续利用 浏览器 Chrome Firefox 编辑器 Notepad++ Sublime Text Markdown工具 Typora MarkdownPad 2 笔记工具 Evernote 代理工具 SS / SSR Proxifier SSTap SocksCap64 AnyConnect OpenConnect 聊天工具 QQ Lite / TIM WeChat Telegram Discord 系统工具 f.lux MacType Dism++ Listary uTrun Geek Uninstaller CCleaner VMware 截图工具 FastStone Capture Snipaste 下载工具 Thunder IDM qBittorrent 办公工具 Office / WPS PDF-XChange Viewer SumatraPDF 远程工具 TeamViewer VNC 词典 欧路词典 开发环境 JDK &amp; JRE Python Node.js Git MySQL IDE Navicat JRE Source Insight SQLyog IntelliJ IDEA Android Studio 播放器 网易云音乐 AIMP PotPlayer MPC-BE 压缩工具 7zip Bandizip 图片浏览器 蜂蜜浏览器 网络抓包 Charles Wireshark Fiddler 终端工具 Xshell Xftp 游戏 Steam Origin 其他 Clover 资源管理器多标签拓展 Ditto 剪切板记录 Everthing 全盘搜索 Beyond Compare 文件对比 WinMTR 路由追踪 SpaceSniffer 查看硬盘空间占用","categories":[{"name":"Default","slug":"Default","permalink":"https://imeiji.github.io/categories/Default/"}],"tags":[]},{"title":"搭建 sspanel v3 魔改版记录","slug":"搭建 sspanel v3 魔改版记录","date":"2017-01-09T07:57:01.000Z","updated":"2017-03-20T11:21:18.502Z","comments":true,"path":"2017/01/09/搭建 sspanel v3 魔改版记录/","link":"","permalink":"https://imeiji.github.io/2017/01/09/搭建 sspanel v3 魔改版记录/","excerpt":"","text":"前端使用赵大的魔改版 https://github.com/esdeathlove/ss-panel-v3-mod 后端也使用赵大的魔改版 https://github.com/esdeathlove/shadowsocks 演示环境 : VirMach 512RAM机子 Ubuntu 14 x64 安装前端1.安装 LNMP 1234567screen -S lnmp2G以上内存wget http://soft.vpser.net/lnmp/lnmp1.3-full.tar.gz &amp;&amp; tar xvzf lnmp1.3-full.tar.gzcd lnmp1.3-full &amp;&amp; ./install.sh1G以下内存wget http://soft.vpser.net/lnmp/lnmp1.2-full.tar.gz &amp;&amp; tar xvzf lnmp1.2-full.tar.gzcd lnmp1.2-full &amp;&amp; ./install.sh 安装过程要求输入MySQL密码, 选择MySQL版本&gt;=5.5, PHP版本&gt;5.6. 安装大概需要半小时, 如果中途 ssh 断线, 输入 screen -r lnmp 2.设置虚拟主机 lnmp vhost add 要求输入你的域名, 然后其余项都选 no 接着修改下 nginx 编辑 /usr/local/nginx/conf/vhost/你的域名.conf 然后添加下面这一段到 server 1234location / &#123; try_files $uri $uri/ /index.php$is_args$args; &#125; 修改 root 那一行为 root /home/wwwroot/你的域名/public; 3.下载 sspanel 代码 1234567891011cd /home/wwwroot/你的域名apt-get install git -ygit clone -b master https://github.com/esdeathlove/ss-panel-v3-mod.git tmp &amp;&amp; mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hardchown -R root:root *chmod -R 755 *chown -R www:www storagechattr -i .user.inimv .user.ini publiccd publicchattr +i .user.iniservice nginx restart 4.安装 radius , 不使用VPN的话, 可以不进行这一步 12345678910# 先安装perlapt-get install perl # 然后需要安装perl的DBI组件perl -MCPAN -e shellcpan&gt;install DBI//安装完成后退出cpancpan&gt;quit# 再安装其它组件apt install freeradius freeradius-mysql freeradius-utils 5.配置数据库 浏览器打开 http://你的vps ip/phpmyadmin 用户 : root 密码 :安装 lnmp 时设置的 需要创建一个数据库和一个访问这个数据库的用户 点击 用户 -&gt; 新建 -&gt; 添加用户 登录信息 : Username 选择 使用文本域 , 填写你的用户名 如 sspanel Host 选择任意主机 % 密码 选择使用文本域 填写密码 用户数据库 : 勾选 创建与用户同名的数据库并授予所有权限 全局权限 : 全选 接着按执行 选择刚刚新建的数据库 sspanel 导入程序目录下的 glzjin_all.sql 不适用 VPN 的话跳下一步 接着配置 radius , 创建个 radius 数据库和用户 (重复以上步骤) 选择 radius 数据库 导入 https://github.com/glzjin/Radius-install/raw/master/all.sql 回到 ssh 继续设置 radius 编辑 /etc/freeradius/sql.conf 配置 login(用户名), password(密码), radius_db(数据库名)等字段 找到 readclients 一行，设为 yes 并去掉注释符号# 然后下面是几个文件的覆盖 12345wget https://github.com/glzjin/Radius-install/raw/master/radiusd.conf -O /etc/freeradius/radiusd.confwget https://github.com/glzjin/Radius-install/raw/master/default -O /etc/freeradius/sites-enabled/defaultwget https://github.com/glzjin/Radius-install/raw/master/dialup.conf -O /etc/freeradius/sql/mysql/dialup.confwget https://github.com/glzjin/Radius-install/raw/master/dictionary -O /etc/freeradius/dictionarywget https://github.com/glzjin/Radius-install/raw/master/counter.conf -O /etc/freeradius/sql/mysql/counter.conf Radius 配置完成, 1service freeradius start 然后你也可以将该 freeradius 设为开机启动项 6.配置 sspanel 1234cd /home/wwwroot/你的域名cp config/.config.php.example config/.config.php# 编辑以下文件 建议使用 FTP 下载到本地修改vi config/.config.php 由于配置太多 这里只说重点 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778$System_Config['key'] = ''; //修改此key为随机字符串确保网站安全$System_Config['appName'] = ''; //站点名称$System_Config['baseUrl'] = 'https://zhaojin97.cn'; // 站点地址$System_Config['timeZone'] = 'PRC'; // RPC 天朝时间 UTC 格林时间$System_Config['pwdMethod'] = 'sha256'; // 密码加密 可选 md5,sha256$System_Config['salt'] = ''; // 密码加密用，从旧版升级请留空$System_Config['authDriver'] = 'cookie'; // 登录验证存储方式,推荐使用Redis 可选: cookie,redis$System_Config['mailDriver'] = 'mailgun'; // 邮件 可选 mailgun or smtp 需要支持qq邮箱的选 smtp$System_Config['checkinMin'] = '100'; // 签到最少流量 单位MB$System_Config['checkinMax'] = '500'; // 签到最多流量$System_Config['defaultTraffic'] = '100'; // 用户初始流量 单位GB$System_Config['inviteNum'] = '0'; // 注册后获得的邀请码数量# database 数据库配置$System_Config['db_driver'] = 'mysql';$System_Config['db_host'] = 'localhost'; // 数据库地址$System_Config['db_database'] = ''; // 数据库名称 sspanel$System_Config['db_username'] = ''; // 数据库用户 sspanel$System_Config['db_password'] = ''; // sspanel用户的密码$System_Config['db_charset'] = 'utf8';$System_Config['db_collation'] = 'utf8_general_ci';$System_Config['db_prefix'] = '';# redis$System_Config['redis_scheme'] = 'tcp'; // 登录验证存储方式选了 redis 的话需要配置$System_Config['redis_host'] = '127.0.0.1';$System_Config['redis_port'] = '6379';$System_Config['redis_database'] = '0';$System_Config['redis_password']=\"\";# smtp$System_Config['smtp_host'] = ''; // 例如 smtp.qq.com$System_Config['smtp_username'] = '';$System_Config['smtp_port'] = '25';$System_Config['smtp_name'] = '';$System_Config['smtp_sender'] = '';$System_Config['smtp_passsword'] = '';$System_Config['smtp_ssl'] = 'false';#功能开关 需要用到的才开 建议先别动$System_Config['enable_wecenter']='false';$System_Config['enable_radius']='false'; // 配置了 radius 的话就开$System_Config['enable_cloudxns']='false';$System_Config['enable_duoshuo']='false';$System_Config['enable_rss']='true';$System_Config['enable_paymentwall']='false';#Radius数据库设置$System_Config['radius_db_host']=''; // 跟 上面 database 数据库配置差不多 换成radius即可$System_Config['radius_db_database']='';$System_Config['radius_db_user']='';$System_Config['radius_db_password']='';#Radius连接密钥$System_Config['radius_secret']=''; // 这个重要 必须设#端口池$System_Config['min_port']='10000'; // SSR 分配端口号范围$System_Config['max_port']='65535';#两种方式相对于ss端口的偏移$System_Config['pacp_offset']='-20000'; // PAC+ 和 PAC++ 用到$System_Config['pacpp_offset']='-20000';#测速周期/h$System_Config['Speedtest_duration']='6'; // 对应后端 SSR 的 userapiconfig.py 里的 SPEEDTEST#随机分组，注册时随机分配到的分组，多个分组请用英文半角逗号分隔。$System_Config['ramdom_group']='0'; // 组别用于区分用户组 对应组只能访问对应组和0组的服务器 明白后再修改 #充值返利百分比$System_Config['code_payback']='20'; // 用户充值后 给邀请他注册的人返利多少%#注册时的流量重置日以及需要重置的流量,0不重置$System_Config['reg_auto_reset_day']='0';$System_Config['reg_auto_reset_bandwidth']='100'; // 单位G 以上为 config 部分配置 完成后保存并上传到原目录下 切换到 ssh 窗口, 在你的网站目录下执行以下命令创建管理员 php xcat createAdmin 按照提示, 输入管理员邮箱密码等信息, 然后执行以下命令同步用户 php xcat syncusers 此时管理员创建完成 接下来需要对服务器进行计划任务的设置,执行 crontab -e 命令, 添加以下五段 12345630 22 * * * php /home/wwwroot/站点文件夹/xcat sendDiaryMail */1 * * * * php /home/wwwroot/站点文件夹/xcat synclogin*/1 * * * * php /home/wwwroot/站点文件夹/xcat syncvpn0 0 * * * php /home/wwwroot/站点文件夹/xcat dailyjob*/1 * * * * php /home/wwwroot/站点文件夹/xcat checkjob */1 * * * * php /home/wwwroot/站点文件夹/xcat syncnas 重启Crontab/etc/init.d/cron restart 7.注意事项 检查时间是否为天朝时间 如果VPS默认是非中国时区的话, 如下命令可以用来更改为中国时区 cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 检查防火墙是否屏蔽数据库端口 123456# 允许本机访问iptables -A INPUT -s 127.0.0.1/32 -p tcp -m tcp --dport 3306 -j ACCEPT# 允许节点访问iptables -A INPUT -s 节点IP -p tcp -m tcp --dport 3306 -j ACCEPT# 允许所有IP访问iptables -A INPUT -p tcp -m tcp --dport 3306 -j ACCEPT 查看防火墙规则 1234查看已添加的iptables规则iptables -L -n --line-numbers删除已添加的iptables规则iptables -D INPUT line-numbers 规则保存 1234# Ubuntuiptables-save &gt; /etc/iptables.rules# CentOSservice iptables save 安装后端1.安装 libsodium 12345apt-get install build-essential wget -ywget https://github.com/jedisct1/libsodium/releases/download/1.0.10/libsodium-1.0.10.tar.gztar xf libsodium-1.0.10.tar.gz &amp;&amp; cd libsodium-1.0.10./configure &amp;&amp; make -j2 &amp;&amp; make installldconfig 2.安装SSR 12345678910apt-get install python-pip git -ypip install cymysqlcd ..git clone -b manyuser https://github.com/glzjin/shadowsocks.gitcd shadowsockschmod +x *.sh# 配置程序cp apiconfig.py userapiconfig.pycp config.json user-config.jsonvi userapiconfig.py 然后主要编辑 userapiconfig.py, 来解释下里面各项配置的意思 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162# Config#节点ID 对应前端节点列表的IDNODE_ID = 1#自动化测速，为0不测试，此处以小时为单位，要和 ss-panel 设置的小时数一致SPEEDTEST = 6#云安全，自动上报与下载封禁IP，1为开启，0为关闭CLOUDSAFE = 1#自动封禁SS密码和加密方式错误的 IP，1为开启，0为关闭ANTISSATTACK = 0#是否接受上级下发的命令，如果你要用这个命令，请参考我之前写的东西，公钥放在目录下的 ssshell.ascAUTOEXEC = 1#是否以多线程模式运行，关闭这个限速就会无效。请优先测试 1 ，开启试试，能运行没。MULTI_THREAD = 0#多端口单用户设置，看重大更新说明。MU_SUFFIX = 'zhaoj.in'#多端口单用户设置，看重大更新说明。MU_REGEX = '%5m%id.%suffix'#不明觉厉SERVER_PUB_ADDR = '127.0.0.1' # mujson_mgr need this to generate ssr link#此处不要修改API_INTERFACE = 'glzjinmod' #mudbjson, sspanelv2, sspanelv3, sspanelv3ssr, muapiv2(not support)#mudb，不要管MUDB_FILE = 'mudb.json'# Mysql 数据库连接信息MYSQL_HOST = '127.0.0.1'MYSQL_PORT = 3306MYSQL_USER = 'ss'MYSQL_PASS = 'ss'MYSQL_DB = 'shadowsocks'MYSQL_UPDATE_TIME = 60# 是否启用SSL连接，0为关，1为开MYSQL_SSL_ENABLE = 0# 客户端证书目录，请看 https://github.com/glzjin/shadowsocks/wiki/Mysql-SSL%E9%85%8D%E7%BD%AEMYSQL_SSL_CERT = '/root/shadowsocks/client-cert.pem'MYSQL_SSL_KEY = '/root/shadowsocks/client-key.pem'MYSQL_SSL_CA = '/root/shadowsocks/ca.pem'# API，不用管API_HOST = '127.0.0.1'API_PORT = 80API_PATH = '/mu/v2/'API_TOKEN = 'abcdef'API_UPDATE_TIME = 60# Manager 不用管MANAGE_PASS = 'ss233333333'#if you want manage in other server you should set this value to global ipMANAGE_BIND_IP = '127.0.0.1'#make sure this port is idleMANAGE_PORT = 23333 3.运行SSR 运行的话, 有几种方式 python server.py 用于调错的 ./run.sh 无日志后台运行 ./logrun.sh 有日志后台运行 supervisord 这里说下 使用Supervisor守护进程启动ssr 123456789101112131415161718192021222324252627# 安装apt-get install supervisor -y# 写入配置vi /etc/supervisor/conf.d/ssr.conf# 写入以下内容[program:ssr]command=python /root/shadowsocks/server.py autorestart=trueautostart=trueuser=root# 重启Supervisor服务。/etc/init.d/supervisor restart# 重启 ssrsupervisorctl restart ssr# 查看Supervisor服务运行状态。supervisorctl status# 如果遇到问题，可以检查日志：supervisorctl tail -f ssr stderr# 如果使用supervisor进程守护，需要修改文件vi /etc/default/supervisor，添加一行：ulimit -n 1024000 强化安全1.将网站支持 SSL 强化安全 需要提前准备好 SSL 证书文件, 没有的话可以使用Let’s Encrypt 搞个免费SSL证书, 接着配置 nginx 编辑 /usr/local/nginx/conf/vhost/域名.conf 12345678910111213141516server&#123; listen 80; #listen [::]:80; #有ipv6的开 server_name 域名; rewrite ^(.*) https://$server_name$1 permanent;&#125;server&#123; listen 443 ssl; #listen [::]:443 ssl; #有ipv6的开 ssl_certificate /etc/letsencrypt/live/你的域名/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/你的域名/privkey.pem; ssl_trusted_certificate /etc/letsencrypt/live/你的域名/chain.pem;&#125; 2.禁止 http 的访问请求 由于 http 仍然可以访问, 所以我们需要将 http 的请求手动转移到 https, 由于 SSpanel 本身使用了重定向, 那么在不使用其他重定向的情况下, 最简单的方法就是用 html 网页的 参数 1234567&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=\"refresh\" content=\"0;url=https://域名\"&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;/head&gt;&lt;/html&gt; 3.转移 phpMyAdmin 目录 转移目录 LNMP安装完毕以后默认的会在IP地址网站根目录生成一个 phpMyAdmin 的目录, 但是正是因为这个原因, 暴露了该目录, 我一般都会直接把这个文件夹转移到新的网站目录下, 比如转移到其他二级域名下的某个目录, 只需要在LNMP中新建一个二级域名而已, 然后把 phpMyAdmin 这个目录再转移到这个二级域名的网站目录下 限制IP 在 phpMyAdmin 的目录下新增 .htaccess 写入以下 123allow from 59.168.1.0/24allow from 59.168.2.50deny from all 除了 59.168.1.1 至 59.168.1.254 的区间IP 与 59.168.2.50 可以进入后台其于IP都封锁, 就算对方知道路径, IP不允许也是无法进入 参考 ss-panel-v3-mod安装说明 说明以及安装方法 Linux上iptables防火墙的基本应用教程","categories":[{"name":"VPS","slug":"VPS","permalink":"https://imeiji.github.io/categories/VPS/"}],"tags":[]},{"title":"VPS 自动备份数据库到邮箱","slug":"VPS 自动备份数据库到邮箱","date":"2017-01-07T16:00:00.000Z","updated":"2017-01-09T10:09:38.381Z","comments":true,"path":"2017/01/08/VPS 自动备份数据库到邮箱/","link":"","permalink":"https://imeiji.github.io/2017/01/08/VPS 自动备份数据库到邮箱/","excerpt":"","text":"1.请确保在home目录下有backup目录，如果没有请执行 1mkdir /home/backup 2.安装Email组件，以保证数据库文件可以发送到您的邮箱1apt-get install sendmail mutt 3.脚本开始vi backup.sh123456789101112131415161718192021222324252627282930#!/bin/bash#你要修改的地方从这里开始MYSQL_USER=数据库用户MYSQL_PASS=数据库密码MAIL_TO=发送邮箱WEB_DATA=/home/wwwroot #本地备份路径DOMAIN=域名#你要修改的地方从这里结束#定义数据库的名字和旧数据库的名字DataBakName=Data_$(date +\"%Y%m%d\").tar.gzWebBakName=Web_$(date +%Y%m%d).tar.gzOldData=Data_$(date -d -5day +\"%Y%m%d\").tar.gzOldWeb=Web_$(date -d -5day +\"%Y%m%d\").tar.gz#删除本地3天前的数据rm -rf /home/backup/Data_$(date -d -3day +\"%Y%m%d\").tar.gz /home/backup/Web_$(date -d -3day +\"%Y%m%d\").tar.gzcd /home/backup#导出数据库,一个数据库一个压缩文件for db in `/usr/bin/mysql -u$MYSQL_USER -p$MYSQL_PASS -B -N -e 'SHOW DATABASES' | xargs`; do (/usr/bin/mysqldump -u$MYSQL_USER -p$MYSQL_PASS $&#123;db&#125; | gzip -9 - &gt; $&#123;db&#125;.sql.gz)done#压缩数据库文件为一个文件tar zcf /home/backup/$DataBakName /home/backup/*.sql.gzrm -rf /home/backup/*.sql.gz#发送数据库到Email,如果数据库压缩后太大,请注释这行#echo \"主题:数据库备份\" | mutt -e \"my_hdr from:$DOMAIN&lt;root@$DOMAIN&gt;\" -a /home/backup/$DataBakName -s \"内容:数据库备份\" -- $MAIL_TO#压缩网站数据tar zcf /home/backup/$WebBakName $WEB_DATA#发送网站数据和数据库到Emailecho \"主题:网站备份\" | mutt -e \"my_hdr from:$DOMAIN&lt;root@$DOMAIN&gt;\" -a /home/backup/$DataBakName /home/backup/$DataBakName -s \"内容:网站备份\" -- $MAIL_TO 4.执行脚本定时备份执行文件赋予权限chmod +x /root/backup.sh准备添加定时设置,每天半夜12点备份数据12crontab -e00 00 * * * sh /root/backup.sh 重启Crontab/etc/init.d/cron restart 参考:http://www.laozuo.org/4560.html","categories":[{"name":"VPS","slug":"VPS","permalink":"https://imeiji.github.io/categories/VPS/"}],"tags":[]},{"title":"今日头条Api分析","slug":"今日头条Api分析","date":"2017-01-04T16:00:00.000Z","updated":"2017-01-09T10:17:54.914Z","comments":true,"path":"2017/01/05/今日头条Api分析/","link":"","permalink":"https://imeiji.github.io/2017/01/05/今日头条Api分析/","excerpt":"","text":"获取新闻标题普通用法1http://toutiao.com/api/article/recent/?source=2&amp;category=类型&amp;as=A1D5D87595C3287 例如获取热点新闻1http://toutiao.com/api/article/recent/?source=2&amp;category=news_hot&amp;as=A1D5D87595C3287 其中 category 指类型 as 值随机生成 感兴趣的自己去抓取得到的信息为123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&#123; \"has_more\": true, \"message\": \"success\", \"data\": [ &#123; \"media_name\": \"侠客岛\", \"abstract\": \"今天又有大新闻啦。据美国多家媒体的消息， 12月15日，中国海军在南海趁美国一艘无人水下潜航器（UUV）故障之机，抢在美军打捞人员之前将其捞走。\", \"impression_count\": 7433280, \"image_list\": [ &#123; \"url\": \"http://p1.pstatp.com/list/134b00048dd993d77429\" &#125;, &#123; \"url\": \"http://p3.pstatp.com/list/1349000017bb1b3c7366\" &#125;, &#123; \"url\": \"http://p3.pstatp.com/list/134c0003788b24d74346\" &#125; ], \"media_avatar_url\": \"http://p3.pstatp.com/large/1731/4112623237\", \"external_visit_count\": 14999, \"article_type\": 0, \"more_mode\": true, \"tag\": \"news_military\", \"is_favorite\": 0, \"has_m3u8_video\": 0, \"keywords\": \"南海诸岛,南海,美国,专属经济区,公约,国际法\", \"has_mp4_video\": 0, \"favorite_count\": 1059, \"display_url\": \"http://toutiao.com/group/6365056560833659137/\", \"article_sub_type\": 0, \"bury_count\": 9, \"title\": \"美国想在南海下黑手，结果被中国抓个正着！这下送礼了\", \"datetime\": \"2016-12-17 22:27\", \"has_video\": false, \"share_url\": \"http://toutiao.com/group/6365056560833659137/?iid=41507200127&amp;app=news_article\", \"id\": 6365056560833659000, \"source\": \"侠客岛\", \"comment_count\": 17, \"article_url\": \"http://toutiao.com/group/6365056560833659137/\", \"create_time\": 1481980801, \"recommend\": 0, \"tips\": 0, \"aggr_type\": 1, \"item_source_url\": \"/item/6365059050404577794/\", \"media_url\": \"http://toutiao.com/m3741758306/\", \"display_time\": 1481980795, \"publish_time\": 1481980795, \"go_detail_count\": 504591, \"group_flags\": 2, \"middle_mode\": false, \"display_title\": \" \", \"gallary_image_count\": 3, \"item_seo_url\": \"/item/6365059050404577794/\", \"tag_id\": 6365056560833659000, \"source_url\": \"/group/6365056560833659137/\", \"article_genre\": \"article\", \"large_mode\": false, \"item_id\": 6365059050404578000, \"natant_level\": 0, \"is_digg\": 0, \"seo_url\": \"/group/6365056560833659137/\", \"repin_count\": 1059, \"url\": \"http://toutiao.com/group/6365056560833659137/\", \"level\": 0, \"digg_count\": 55, \"behot_time\": 1481984828, \"hot\": 0, \"preload_web\": 2, \"comments_count\": 17, \"has_image\": true, \"is_bury\": 0, \"group_id\": 6365056560833659000, \"middle_image\": &#123; \"url\": \"http://p1.pstatp.com/list/134b00048dd993d77429\", \"width\": 415, \"url_list\": [ &#123; \"url\": \"http://p1.pstatp.com/list/134b00048dd993d77429\" &#125;, &#123; \"url\": \"http://pb3.pstatp.com/list/134b00048dd993d77429\" &#125;, &#123; \"url\": \"http://pb3.pstatp.com/list/134b00048dd993d77429\" &#125; ], \"uri\": \"list/134b00048dd993d77429\", \"height\": 536 &#125; &#125; ], \"next\": &#123; \"max_behot_time\": 1481984828 &#125;&#125; 我们要获取的新闻都在 data 数组里, 这里我只罗列了部分 以下给出部分类型 仅供参考1234567891011121314151617181920'推荐': '__all__','热点': 'news_hot','社会': 'news_society','娱乐': 'news_entertainment','科技': 'news_tech','军事': 'news_military','体育': 'news_sports''汽车': 'news_car','财经': 'news_finance','国际': 'news_world','时尚': 'news_fashion','旅游': 'news_travel','探索': 'news_discovery','育儿': 'news_baby','养生': 'news_regimen','故事': 'news_story','美文': 'news_essay','游戏': 'news_game','历史': 'news_history','美食': 'news_food', 高级用法1http://toutiao.com/api/article/recent/?source=2&amp;category=news_hot&amp;as=A105177907376A5&amp;cp=5797C7865AD54E1&amp;count=20&amp;offset=0&amp;_=1481986412 category 指类型 as 随机生成 cp 随机生成 count 获取文章数量 offset 偏移量 _= 指 max_behot_time 补充一个Api, 从手机版获取到的1http://m.toutiao.com/list/?tag=__all__&amp;ac=wap&amp;count=20&amp;format=json_raw&amp;as=A17538D54D106FF&amp;cp=585DF0A65F0F1E1&amp;min_behot_time=1482491618 获取新闻获取新闻内容1http://m.toutiao.com/item_seo_url值/info/ 例如获取 美国无人潜航器被中国抓获引爆网络 这篇新闻的内容1http://m.toutiao.com/i6364969235889783298/info/ 其中 i6364969235889783298 值为 item_seo_url 可从上面的Api获取得到的信息为1234567891011121314151617181920&#123; \"_ck\": &#123;&#125;, \"data\": &#123; \"detail_source\": \"诤闻军事\", \"media_user\": &#123; \"avatar_url\": \"http://p2.pstatp.com/large/11543/4356023632\", \"id\": 5866716857, \"screen_name\": \"诤闻军事\" &#125;, \"publish_time\": 1481959884, \"title\": \"美国无人潜航器被中国抓获引爆网络，一中国网友外媒舌战群儒\", \"url\": \"http://toutiao.com/group/6364965628189327618/\", \"is_original\": true, \"is_pgc_article\": true, \"content\": \"&lt;div&gt;&lt;p&gt;据外媒报道，12月15日中国海军一艘南救510打捞救生船，在靠近菲律宾的海域持续跟踪美军海洋测量船鲍迪奇号之后，当着美军的面，将其放出的两艘水下无人航行器之一打捞带走。目前美方已经向中国提起抗议，要求归还无人航行器。&lt;strong&gt;据CNN报道，当时美军鲍迪奇号立刻使用无线电呼叫中国舰艇，但是却没有应答，过了很久之后中国军舰突然回应：有什么事要帮忙吗？我们正在附近巡逻。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=\\\"http://p3.pstatp.com/large/12db0007c12ad2732220\\\" img_width=\\\"938\\\" img_height=\\\"732\\\" alt=\\\"美国无人潜航器被中国抓获引爆网络，一中国网友外媒舌战群儒\\\" onerror=\\\"javascript:errorimg.call(this);\\\"&gt;&lt;/p&gt;&lt;p class=\\\"pgc-img-caption\\\"&gt;鲍迪奇号&lt;/p&gt;&lt;p&gt;类似《华尔街日报》、CNN等媒体，对这一事件都冠以“Breaking News”（重大新闻）的标题，迅速进行了报道，因此也引发了国外网友的讨论。特别有趣的是，在《华尔街日报》网站上，一位网友“&lt;strong&gt;adam w”却独自在外媒网站和拥护美国的外国网友进行了一场激烈的辩论&lt;/strong&gt;。从名字和用语来开，这位网友很可能来自中国。&lt;/p&gt;&lt;p&gt;例如网名“Bryan Jaeck”用户认为，如果中国不归还无人航行器，过一段时间中国就能山寨所有的美国技术来建造自己的无人航行器。美国舰长应该把手放到扳机上发出警告：要么归还要么就去死！“adam w”则回答说：一名间谍被抓获了，现在暴徒说了：如果不交出间谍他们就开战！&lt;/p&gt;&lt;p&gt;网名“Christopher Holland”表示，中国的法律认为：我的是我的，你的也是我的。这就是中国人的想法。偷窃美国政府财产对于中国人来说小菜一碟。&lt;strong&gt;“adam w”则回答说：美国拥有世界上最庞大的间谍网络，不断从中国、俄罗斯窃取机密，甚至连德国、法国这样的盟友都不放过&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;img src=\\\"http://p3.pstatp.com/large/134d0000fb0668a5844f\\\" img_width=\\\"634\\\" img_height=\\\"439\\\" alt=\\\"美国无人潜航器被中国抓获引爆网络，一中国网友外媒舌战群儒\\\" onerror=\\\"javascript:errorimg.call(this);\\\"&gt;&lt;/p&gt;&lt;p class=\\\"pgc-img-caption\\\"&gt;无人潜航器&lt;/p&gt;&lt;p&gt;网名“Timothy corrigan”称：下次中国如果还要这么干，美国就应该把他们都赶出这片水域。应该让附近的潜艇发射战斧导弹到中国的岛礁上去“参观”。中国已经看穿了奥巴马是一个弱者，特朗普应该给中国一个教训。“adam w”回答说：&lt;strong&gt;美国人当着中国舰艇的面释放间谍无人器。中国抓获了它，美国却要以此为借口发动战争。美国暴徒终于显露了自己的本色&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;“Timothy corrigan”回应说：国际海域意味着你不能碰其他人的东西。中国的所作所为是盗窃，应该被严厉惩罚。&lt;strong&gt;美国应该击沉中国舰艇，派遣两个航母编队到南海，如果不够就派三个&lt;/strong&gt;。“adam w”则回答；&lt;strong&gt;真的吗？美国就没有在国际海域抓获其他人的舰艇吗（应该是意指银河号事件）？&lt;/strong&gt;在你谴责其他人搞间谍的时候，其他国家的所有计算机又在被谁监控？美国CIA一直在干这事，你这个伪君子。&lt;/p&gt;&lt;p&gt;网名“michael de martine”认为。为什么美国海军会派遣一艘小型没有武装的测量船到“敌军海域”？这不是成心让中国这个坏人来来搞事吗？“adam w”回应说：派没有武装的测量船到“敌军海域”，还来到中国舰艇的旁边。这件事美国才是事实上的挑衅者。&lt;/p&gt;&lt;p&gt;&lt;img src=\\\"http://p1.pstatp.com/large/134c0002f256279ce44d\\\" img_width=\\\"634\\\" img_height=\\\"444\\\" alt=\\\"美国无人潜航器被中国抓获引爆网络，一中国网友外媒舌战群儒\\\" onerror=\\\"javascript:errorimg.call(this);\\\"&gt;&lt;/p&gt;&lt;p class=\\\"pgc-img-caption\\\"&gt;特朗普的某些举动激怒了中国&lt;br&gt;&lt;/p&gt;&lt;p&gt;网友“WILLIAM A TAYLOR”说，这并不是“敌军海域”而是国际公海。而中国声称对这片国际海域拥有主权。美国有义务保持这一海域的航行自由，但中国去想把其他人排除在外。权利如果没有武力维护就没有任何意义，这就是为什么那么多人要带枪。“adam w”则问道：义务？到底是什么义务？菲律宾已经告诉美国离开他们的海域，不想当美国人对抗中国的马前卒。所以现在是美国打算单枪匹马挑衅中国。到底谁才是恶人？&lt;/p&gt;&lt;p&gt;除了那些为美国鼓噪的人之外，其实还是有清醒者。一位Gioklie Tanthe说到：&lt;strong&gt;美国必须懂得尊重其他国家，才能够得到其他国家的尊重。&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;&lt;p class=\\\"footnote\\\"&gt;本文为头条号作者原创，未经授权，不得转载。&lt;/p&gt;\", \"source\": \"诤闻军事\", \"video_play_count\": 6 &#125;, \"success\": true&#125; 获取新闻评论1http://www.toutiao.com/api/comment/list/?group_id=头条号&amp;item_id=文章号&amp;offset=偏移量&amp;count=数量 例如获取 美国无人潜航器被中国抓获引爆网络 这篇新闻的评论 1http://www.toutiao.com/api/comment/list/?group_id=6364965628189327618&amp;item_id=6364969235889783298&amp;offset=0&amp;count=10 其中 group_id 和 item_id 可从上面的Api获取得到的信息为1234567891011121314151617181920212223242526&#123; \"message\": \"success\", \"data\": &#123; \"has_more\": true, \"total\": 2410, \"comments\": [ &#123; \"text\": \"中国是一个负责任的大国，只要美方提供证据证明这东西是美国的，中国可以归还。流程是:美方提供生产厂家原始记录、生产编号，该型号潜航器的设计图纸，以及该次海洋调查任务的详细说明、行动计划等等。中方需要半年左右的调查就可以了。\", \"digg_count\": 4351, \"reply_data\": &#123; \"reply_list\": [] &#125;, \"reply_count\": 176, \"create_time\": 1481964505, \"user\": &#123; \"avatar_url\": \"http://p0.pstatp.com/origin/3793/3131589739\", \"user_id\": 6180186929, \"name\": \"hanxinping1969\" &#125;, \"dongtai_id\": 7105200091, \"user_digg\": 0, \"id\": 52960355361 &#125; ] &#125;&#125; 获取头条号文章1http://www.toutiao.com/pgc/ma/?media_id=头条号&amp;page_type=1&amp;count=10&amp;version=2&amp;platform=pc&amp;as=A1C548D5FDB17E6&amp;cp=585DB1871ED64E1&amp;max_behot_time=偏移量 例如获取 国际在线 的文章1http://www.toutiao.com/pgc/ma/?media_id=3232597584&amp;page_type=1&amp;max_behot_time=0&amp;count=10&amp;version=2&amp;platform=pc&amp;as=A1C548D5FDB17E6&amp;cp=585DB1871ED64E1 其中 media_id 可从上面的Api获取得到的信息为1234567891011121314151617181920212223242526272829303132333435&#123; \"media_id\": 3232597584, \"has_more\": 1, \"next\": &#123; \"max_behot_time\": 1482474718 &#125;, \"page_type\": 1, \"message\": \"success\", \"data\": [ &#123; \"play_effective_count\": \"0\", \"gallery_pic_count\": 0, \"go_detail_count\": \"62\", \"title\": \"【老外谈】巴基斯坦专家：中央经济工作会议为2017年中国发展奠定基础\", \"image_list\": [ &#123; \"url\": \"http://p2.pstatp.com/list/13c5000a0fe801679b19\", \"pc_url\": \"http://p2.pstatp.com/list/194x108/13c5000a0fe801679b19\" &#125; ], \"abstract\": \"莎菲·哈里（巴基斯坦）一年一度的中央经济工作会议日前在北京召开。与会的领导人们总结中国在2016年的经济工作，并着眼于2017年的经济战略。\", \"show_play_effective_count\": 0, \"middle_mode\": true, \"has_video\": false, \"source_url\": \"http://www.toutiao.com/item/6367207970920464898/\", \"datetime\": \"2016-12-23 16:06\", \"live_status\": \"\", \"more_mode\": false, \"comments_count\": \"0\", \"video_duration_str\": \"00:00\", \"has_gallery\": false, \"pc_image_url\": \"http://p2.pstatp.com/list/126x82/13c5000a0fe801679b19\" &#125; ]&#125; 获取段子获取段子内容1http://www.toutiao.com/api/article/feed/?category=essay_joke&amp;as=A115C8457F69B85&amp;cp=585F294B8845EE1 得到的信息为123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&#123; \"has_more\": true, \"message\": \"success\", \"data\": [ &#123; \"group\": &#123; \"text\": \"地铁上，一个怂孩子在那一直打他妈妈的手。然后他妈妈把手放在了小孩儿的脸上，怂孩子又使劲要打过去，结果他妈妈突然把手给撤开了。就听啪的一声然后就没有然后了。\", \"create_time\": 1483004786, \"id\": 53368972910, \"favorite_count\": 78, \"go_detail_count\": 43711, \"user_favorite\": 0, \"share_type\": 1, \"is_can_share\": 1, \"comment_count\": 81, \"share_url\": \"http://m.neihanshequ.com/share/group/53368972910/?iid=0&amp;amp;app=joke_essay\", \"label\": 1, \"content\": \"地铁上，一个怂孩子在那一直打他妈妈的手。然后他妈妈把手放在了小孩儿的脸上，怂孩子又使劲要打过去，结果他妈妈突然把手给撤开了。就听啪的一声然后就没有然后了。\", \"category_type\": 1, \"id_str\": \"53368972910\", \"media_type\": 0, \"share_count\": 119, \"type\": 3, \"status\": 112, \"has_comments\": 1, \"user_bury\": 0, \"status_desc\": \"热门投稿\", \"user\": &#123; \"is_following\": false, \"avatar_url\": \"http://p3.pstatp.com/thumb/1353000081efff334e3e\", \"user_id\": 6088312852, \"name\": \"蓝筱蝶\", \"user_verified\": false &#125;, \"user_digg\": 0, \"online_time\": 1483004786, \"category_name\": \"内涵段子\", \"category_visible\": false, \"bury_count\": 248, \"is_anonymous\": false, \"repin_count\": 78, \"digg_count\": 7537, \"has_hot_comments\": 1, \"user_repin\": 0, \"activity\": &#123;&#125;, \"group_id\": 53368972910, \"category_id\": 1 &#125;, \"comments\": [ &#123; \"status\": 5, \"user_profile_url\": \"\", \"is_digg\": 0, \"user_id\": 3126306787, \"description\": \"\", \"bury_count\": 0, \"avatar_url\": \"http://p3.pstatp.com/thumb/1354000a27104141c471\", \"text\": \"这个故事，告诉了我们，不要坐地铁\", \"comment_id\": 53372167364, \"user_verified\": false, \"digg_count\": 11343, \"user_profile_image_url\": \"http://p3.pstatp.com/thumb/1354000a27104141c471\", \"platform_id\": \"feifei\", \"platform\": \"feifei\", \"create_time\": 1483011406, \"user_digg\": 0, \"group_id\": 53368972910, \"user_name\": \"哈哈1个大开心\", \"id\": 53372167364, \"user_bury\": 0 &#125; ], \"type\": 1, \"display_time\": 1483101547, \"online_time\": 1483101547 &#125; ], \"next\": &#123; \"max_behot_time\": 1483101547 &#125;&#125; 获取段子评论1http://www.toutiao.com/group/段子ID/comments/?count=总数&amp;offset=偏移量&amp;item_id=0&amp;format=json 例如1http://www.toutiao.com/group/53404620593/comments/?count=20&amp;offset=0&amp;item_id=0&amp;format=json 其中 段子ID 可从上面的Api获取得到的信息为123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&#123; \"message\": \"success\", \"data\": &#123; \"comment_pagination\": &#123; \"count\": 1, \"total_count\": 75, \"url_fmt\": \"?offset=%s&amp;amp;count=%s\", \"offset\": 0 &#125;, \"group\": &#123; \"status\": 1, \"type\": 3, \"id\": 53404620593, \"_id\": 892139876 &#125;, \"comments\": [ &#123; \"status\": 1, \"user_uid\": null, \"description\": \"这个用户很懒，神马都木有写\", \"reply_to_user_name\": null, \"reply_to_user_verified\": null, \"text\": \"抽烟害人害己\", \"target_id\": null, \"forum_id\": 0, \"reply_count\": 1, \"reply_to_user_id\": null, \"is_blocked\": 0, \"user_verified\": false, \"user_followers_count\": 0, \"is_blocking\": 0, \"user_id\": 5874570453, \"bury_count\": 0, \"type\": 2, \"digg_count\": 405, \"id\": 53409568162, \"platform_id\": 0, \"rate_score\": 0, \"create_time\": 1483093293, \"user_name\": \"今天回家吃晚饭\", \"user_profile_image_url\": \"http://p9.pstatp.com/thumb/bc3000463d913c1744c\" &#125; ], \"page_display_range\": [ 1, 2, 3, 4, 5, 6, 7 ], \"page\": 1, \"page_size\": 1, \"page_last\": 75 &#125;&#125;","categories":[{"name":"Default","slug":"Default","permalink":"https://imeiji.github.io/categories/Default/"}],"tags":[]},{"title":"eBesucher挂机赚钱教程(LXDE+VNC+restarter)","slug":"eBesucher挂机赚钱教程(LXDE+VNC+restarter)","date":"2016-04-03T08:15:07.000Z","updated":"2017-03-20T12:03:12.565Z","comments":true,"path":"2016/04/03/eBesucher挂机赚钱教程(LXDE+VNC+restarter)/","link":"","permalink":"https://imeiji.github.io/2016/04/03/eBesucher挂机赚钱教程(LXDE+VNC+restarter)/","excerpt":"","text":"ebesucher是德国目前最著名的自动冲浪赚钱站，该站最低提现金额PAYPAL2欧元，此站除了可以通过自动冲浪来赚钱之外，还可以通过邮件交换的方式来赚钱 关于收益也不好说，各个地区的IP不一样，德国IP最值钱，但是德国IP比较贵；其他欧美地区的IP差不多，收益不多，但是好在可以多台VPS同时挂机，要做到支付还是相当轻松的（100000积分=2.1欧元，2欧元起付，Paypal支付）。 挂机条件 VPS内存在512M以上 一个欧洲的IP的VPS 挂机准备 ebesucher注册地址: https://www.ebesucher.com尽量还是要填写真实信息，收款时会验证手机号，请务必国籍填写中国。 必须安装 VNC, 浏览器 可选安装 Java, restarter 安装轻量级桌面LXDE+VNC LXDE，全名为Lightweight X11 Desktop Environment，是一个自由桌面环境，可在Unix以及如Linux、BSD等POSIX相容平台上执行。廉价迷你Linux机器Raspberry Pi安装的就是这个桌面，LXDE支持debian及ubuntu环境。 LXDE桌面安装方法 首先运行updateapt-get update 安装LXDE环境apt-get install xorg lxde-core tightvncserver其中xorg为x window，tightvncserver为vnc server在过程中有一个机器地区选择，我们默认回车就可以。 启动VNC/输入密码tightvncserver :1需要输入vnc密码，提示”Would you like to enter a view-only password (y/n)?”时回车即可 配置xstartup系统文件首先要暂停vnc，可以使用如下代码：tightvncserver -kill :1编辑xstartup文件：vi ~/.vnc/xstartup然后在文件的最后添加下面的脚本代码 12lxterminal &amp;/usr/bin/lxsession -s LXDE &amp; 重启VNCtightvncserver :1 LXDE桌面使用方法 使用vnc viewer登陆在这里下载: http://www.realvnc.com/download/viewer/打开客户端，输入IP:590x，这里x是x桌面的编号:连接后输入密码，就可以进入桌面了。 安装浏览器和Flash 建议安装两个浏览器,方便随时切换 安装Firefox 1234# debianapt-get install iceweasel# Ubuntuapt-get install firefox 安装chrome(可选) 123456# 32位wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.debdpkg -i google-chrome-stable_current_i386.deb# 64位wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debdpkg -i google-chrome-stable_current_amd64.deb 安装Flash方法一: 12345678vi /etc/apt/sources.list# 添加如下源deb ftp://ftp.debian.org/debian stable main contrib non-free# 更新源apt-get update# 安装flashplugin-nonfreeapt-get install flashplugin-nonfree# 安装成功后重启firefox，进入firefox的插件设置页面,看看是否成功 ​ 方法二: 12345wget https://fpdownload.adobe.com/get/flashplayer/pdc/24.0.0.221/flash_player_npapi_linux.x86_64.tar.gztar -zxf flash_player_*_linux.x86_64.tar.gzcp libflashplayer.so /usr/lib/mozilla/plugins/cp -r usr /usr# 最新下载地址 https://get.adobe.com/cn/flashplayer/otherversions/ 安装Java(可选) Debian 12345echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.listecho \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.listapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886apt-get updateapt-get install oracle-java8-installer Ubuntu 123456apt-get install python-software-propertie software-properties-commonadd-apt-repository ppa:webupd8team/javaapt-get updateapt-get install oracle-java8-installer# 选择Java版本(可选)update-alternatives --config java 安装restarter(可选) restarter是ebesucher提供的挂机辅助工具，可以在浏览器出现错误（冲浪的网站弹窗，卡死，崩溃等）时自动重启浏览器，这样极大的方便了我们挂机，避免手动维护。 下载restarter 123wget https://www.ebesucher.com/data/restarter-setup-others.v1.2.03.zipapt-get install unzipunzip restarter-setup-others.v1.2.03.zip 安装好java及restarter之后，通过vnc viewer进入桌面，启动终端界面root Terminal输入以下命令： 12cd /rootjava -jar restarter.jar 这样就已启动restarter 设置restarter(可选) 启动restarter之后需要对restarter进行设置 输入username和CODE。CODE可以在 http://www.ebesucher.com/restarter.html 中找到 选择语言language有三个选项，到这里查看你的地址 https://www.ebesucher.com/punkteverdienen.html一般我们选择ebesucher.de 选择浏览器优先选择Firefoxchrome需要手动设置路径 /opt/google/chrome/chrome --user-data-dir 点击start surfbar即可启动firefox开始冲浪 开始冲浪 安装 Firefox 插件并设置好你的 username https://www.ebesucher.com/addon.html 检查 flash 是否安装成功 点击插件, 开始挂机 选择一个积分最多的地区 12345http://www.ebesucher.de/surfbar/usernamehttp://www.ebesucher.com/surfbar/usernamehttp://www.ebesucher.ru/surfbar/usernamehttp://www.ebesucher.es/surfbar/usernamehttp://www.ebesucher.fr/surfbar/username ​ 优化 浏览器不保存历史记录这一点比较重要，因为你一直在冲浪如果保存历史记录，会导致大量的记录文件。进入firefox的preferences-privacy-history，设置为never remember history 制作脚本,定时重启浏览器及restarter Firefox vi /root/Desktop/restart_ff.sh写入以下内容 12345678#!/bin/shexport DISPLAY=localhost:1.0cd /rootrm -rf ~/.vnc/*.log /tmp/plugtmp* &gt; /dev/null 2&gt;&amp;1killall firefox &gt; /dev/null 2&gt;&amp;1killall java &gt; /dev/null 2&gt;&amp;1/usr/bin/firefox --new-tab http://www.ebesucher.com/surfbar/username &gt; /dev/null 2&gt;&amp;1 /usr/bin/java -jar /root/restarter.jar &gt; /dev/null 2&gt;&amp;1 其中，http://www.ebesucher.com/surfbar/username中的username改为你的用户名 给脚本添加可执行权限 chmod a+x /root/Desktop/restart_ff.sh 编辑cron vi /etc/crontab 设置每小时执行一次该脚本 0 * * * * root /root/Desktop/restart_ff.sh 重启cron service cron restart chrome vi /root/Desktop/restart_ch.sh 写入以下内容 12345678#!/bin/shexport DISPLAY=localhost:1.0cd /rootrm -rf ~/.vnc/*.log /tmp/plugtmp* &gt; /dev/null 2&gt;&amp;1killall java &gt; /dev/null 2&gt;&amp;1killall chrome &gt; /dev/null 2&gt;&amp;1/opt/google/chrome/chrome --new-tab http://www.ebesucher.com/surfbar/username --user-data-dir &gt; /dev/null 2&gt;&amp;1 /usr/bin/java -jar /root/restarter.jar &gt; /dev/null 2&gt;&amp;1 其中，http://www.ebesucher.com/surfbar/username中的username改为你的用户名 给脚本添加可执行权限 chmod a+x /root/Desktop/restart_ch.sh 编辑cron vi /etc/crontab 设置每小时执行一次该脚本 0 * * * * root /root/Desktop/restart_ch.sh 重启cron service cron restart 3.使用 cpulimit 限制 firefox 的使用, 防止卡死 123apt-get install cpulimit# 限制firefox使用50% cpu 利用率cpulimit -e firefox -l 50 &gt; /dev/null 2&gt;&amp;1 &amp; 使用docker使用docker挂机 详细教程查看 https://github.com/iMeiji/arukas-docker 参考TENNFY WU » Ebesucher debian vps挂机教程之restarter篇","categories":[{"name":"VPS","slug":"VPS","permalink":"https://imeiji.github.io/categories/VPS/"}],"tags":[]},{"title":"搭建h5ai文件服务器","slug":"搭建h5ai文件服务器","date":"2016-03-26T09:16:34.000Z","updated":"2017-08-12T13:18:09.034Z","comments":true,"path":"2016/03/26/搭建h5ai文件服务器/","link":"","permalink":"https://imeiji.github.io/2016/03/26/搭建h5ai文件服务器/","excerpt":"","text":"h5ai是一款不错的php目录列表程序，也就是php列目录工具,支持apache和nginx官网 https://larsjung.de/h5ai/ 介绍 h5ai is a modern file indexer for HTTP web servers with focus on your files. Directories are displayed in a appealing way and browsing them is enhanced by different views, a breadcrumb and a tree overview. Initially h5ai was an acronym for HTML5 Apache Index but now it supports other web servers too. Requires PHP 5.5+ and works fine with Apache httpd, lighttpd, nginx and Cherokee. 安装依赖一条命令安装LAMP1apt-get install mysql-server mysql-client apache2 php5 php5-cli libapache2-mod-php5 php5-mysql php5-curl php5-gd php-pear php5-imagick php5-mcrypt php5-memcache php5-mhash php5-sqlite php5-xmlrpc php5-xsl php5-json php5-dev libpcre3-dev 安装h5ai12345cd /var/www/html# wget https://release.larsjung.de/h5ai/h5ai-0.28.1.zip 旧版本有 搜索/打包下载 等功能wget https://release.larsjung.de/h5ai/h5ai-0.29.0.zipapt-get install unzip unzip h5ai*.zip 查看h5ai配置打开http://YOUR-DOMAIN.TLD/_h5ai/public/index.php Cache directory这个是系统文件夹的权限，分别修改public和private文件夹里的cache文件夹就可以正常 123cd _h5aichmod 666 private/cache chmod 666 public/cache Movie thumbs视频预览,执行:apt-get install libav-tools PDF thumbsPDF预览,执行: 12apt-get install aptitudeaptitude install imagemagick Shell zipzip预览,执行:apt-get install zip 配置web服务器将/_h5ai/public/index.php添加到web服务器配置文件中默认首页文件列表代码的最后位置 Apache2cd /etc/apache2/sites-available/修改配置文件,增加一行DirectoryIndex index.html index.php /_h5ai/public/index.php然后执行a2enmod rewrite最后service apache2 reload Nginx 对应的nginx配置文件中找到如下一行 index index.html index.php 改为 index index.html index.php /_h5ai/public/index.php 最后service nginx reload 正常安装后，文件放置到和_h5ai平级目录就可以，当然也可以建立文件夹等等 使用 LNMP 一键包的要删除 PHP 禁用函数 编辑 /usr/local/php/etc/php.ini 将 scandir exec passthru 三个函数删除, 并保存重启lnmp 参考h5ai-默默的文件分享系统","categories":[{"name":"VPS","slug":"VPS","permalink":"https://imeiji.github.io/categories/VPS/"}],"tags":[]},{"title":"在Linux上安装deluge实现BT离线下载","slug":"在Linux上安装deluge实现BT离线下载","date":"2016-03-26T07:47:34.000Z","updated":"2016-03-31T15:10:32.611Z","comments":true,"path":"2016/03/26/在Linux上安装deluge实现BT离线下载/","link":"","permalink":"https://imeiji.github.io/2016/03/26/在Linux上安装deluge实现BT离线下载/","excerpt":"","text":"官网 http://dev.deluge-torrent.org/项目地址 https://github.com/deluge-torrent/deluge GTK UI for the desktopWeb UI for the browserConsole UI for the command line 有三种版本,我们这里只安装Web UI 从软件源安装 Ubuntu 1234apt-get install python-software-properties software-properties-commonadd-apt-repository ppa:deluge-team/ppaapt-get updateapt-get install deluged deluge-web deluge-webui Debian 12apt-get updateapt-get install deluged deluge-web deluge-webui 其他系统请参考官网的教程 http://dev.deluge-torrent.org/wiki/Download http://dev.deluge-torrent.org/wiki/Installing 从源码编译安装Debian &amp; Ubuntu 安装依赖1apt-get install python python-twisted python-openssl python-setuptools intltool python-xdg python-chardet geoip-database python-libtorrent python-notify python-pygame python-glade2 librsvg2-common xdg-utils python-mako 编译安装ftp下载 GitHub下载12345wget http://download.deluge-torrent.org/source/deluge-1.3.12.tar.gztar zxf deluge*.tar.gzcd deluge*python setup.py buildpython setup.py install 启动正常启动12deluge-webGo to http://localhost:8112/ default-password = \"deluge\" 指定端口启动deluge-web -f -p 54321 后台运行123456789# 安装screenapt-get install screen# 建立一个名为deluge的后台screen，方便后续切换，此名字可随意命名screen -S \"deluge\"# 在新的screen窗口里输入deluge-web# 此时终端会持续运行，要将其切换到后台，按下ctrl+a+d键，将当前screen切换到后台，后续通过执行screen -r deluge# 即可切回此窗口，这时再去停止服务很方便 参考官方wiki在Ubuntu 14.04上安装deluge实现在VPS上进行bt离线下载","categories":[{"name":"VPS","slug":"VPS","permalink":"https://imeiji.github.io/categories/VPS/"}],"tags":[]},{"title":"GitHub Pages 折腾笔记","slug":"GitHub Pages 折腾笔记","date":"2016-01-15T03:34:34.000Z","updated":"2016-01-15T07:44:31.236Z","comments":true,"path":"2016/01/15/GitHub Pages 折腾笔记/","link":"","permalink":"https://imeiji.github.io/2016/01/15/GitHub Pages 折腾笔记/","excerpt":"","text":"玩转多说 多说评论评论的出色的开放性和可定制性，让我们可以通过自定义CSS，给我们的评论栏带来更多的想象力：圆角头像、触发动画效果、阴影神马的当然不在话下。 自定义CSS路径：多说后台管理--设置--基本设置--自定义CSS 自定义头像动画 圆角(或者圆形)+阴影12345678#ds-reset .ds-avatar img&#123; width:54px;height:54px; /*设置图像的长和宽*/ border-radius: 27px;/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/ -webkit-border-radius: 27px;/*圆角效果：兼容webkit浏览器*/ -moz-border-radius:27px; box-shadow: inset 0 -1px 0 #3333sf;/*设置图像阴影效果*/ -webkit-box-shadow: inset 0 -1px 0 #3333sf;&#125; 鼠标悬浮时:图像进行360度旋转12345678910111213141516171819#ds-reset .ds-avatar img&#123; width:54px;height:54px; /*设置图像的长和宽*/ border-radius: 27px;/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/ -webkit-border-radius: 27px;/*圆角效果：兼容webkit浏览器*/ -moz-border-radius:27px; box-shadow: inset 0 -1px 0 #3333sf;/*设置图像阴影效果*/ -webkit-box-shadow: inset 0 -1px 0 #3333sf; -webkit-transition: 0.4s; -webkit-transition: -webkit-transform 0.4s ease-out; transition: transform 0.4s ease-out;/*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/ -moz-transition: -moz-transform 0.4s ease-out;&#125; #ds-reset .ds-avatar img:hover&#123;/*设置鼠标悬浮在头像时的CSS样式*/ box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1); -webkit-box-shadow: 0 0 10px #fff; rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1); transform: rotateZ(360deg);/*图像旋转360度*/ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); &#125; 鼠标悬浮时:图像放大缩小123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181#ds-reset .ds-avatar img,#ds-reset .ds-avatar img:hover&#123; -webkit-animation-fill-mode: both; -moz-animation-fill-mode: both; -ms-animation-fill-mode: both; -o-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: 0s; -moz-animation-duration: 0s; -ms-animation-duration: 0s; -o-animation-duration: 0s; animation-duration: 0s; -webkit-animation-duration: 0.7s; -moz-animation-duration: 0.7s; -ms-animation-duration: 0.7s; -o-animation-duration: 0.7s; animation-duration: 0.7s; &#125; @-webkit-keyframes bounceIn &#123; 0% &#123; opacity: 0; -webkit-transform: scale(.3); &#125; 50% &#123; opacity: 1; -webkit-transform: scale(1.05); &#125; 70% &#123; -webkit-transform: scale(.9); &#125; 100% &#123; -webkit-transform: scale(1); &#125; &#125; @-moz-keyframes bounceIn &#123; 0% &#123; opacity: 0; -moz-transform: scale(.3); &#125; 50% &#123; opacity: 1; -moz-transform: scale(1.05); &#125; 70% &#123; -moz-transform: scale(.9); &#125; 100% &#123; -moz-transform: scale(1); &#125; &#125; @-o-keyframes bounceIn &#123; 0% &#123; opacity: 0; -o-transform: scale(.3); &#125; 50% &#123; opacity: 1; -o-transform: scale(1.05); &#125; 70% &#123; -o-transform: scale(.9); &#125; 100% &#123; -o-transform: scale(1); &#125; &#125; @keyframes bounceIn &#123; 0% &#123; opacity: 0; transform: scale(.3); &#125; 50% &#123; opacity: 1; transform: scale(1.05); &#125; 70% &#123; transform: scale(.9); &#125; 100% &#123; transform: scale(1); &#125; &#125; #ds-reset .ds-avatar img &#123; -webkit-animation-name: bounceIn; -moz-animation-name: bounceIn; -o-animation-name: bounceIn; animation-name: bounceIn; &#125; @-webkit-keyframes bounceOut &#123; 0% &#123; -webkit-transform: scale(1); &#125; 25% &#123; -webkit-transform: scale(.95); &#125; 50% &#123; opacity: 1; -webkit-transform: scale(1.1); &#125; 100% &#123; opacity: 0; -webkit-transform: scale(.3); &#125; &#125; @-moz-keyframes bounceOut &#123; 0% &#123; -moz-transform: scale(1); &#125; 25% &#123; -moz-transform: scale(.95); &#125; 50% &#123; opacity: 1; -moz-transform: scale(1.1); &#125; 100% &#123; opacity: 0; -moz-transform: scale(.3); &#125; &#125; @-o-keyframes bounceOut &#123; 0% &#123; -o-transform: scale(1); &#125; 25% &#123; -o-transform: scale(.95); &#125; 50% &#123; opacity: 1; -o-transform: scale(1.1); &#125; 100% &#123; opacity: 0; -o-transform: scale(.3); &#125; &#125; @keyframes bounceOut &#123; 0% &#123; transform: scale(1); &#125; 25% &#123; transform: scale(.95); &#125; 50% &#123; opacity: 1; transform: scale(1.1); &#125; 100% &#123; opacity: 0; transform: scale(.3); &#125; &#125; #ds-reset .ds-avatar img:hover&#123; -webkit-animation-name: bounceOut; -moz-animation-name: bounceOut; -o-animation-name: bounceOut; animation-name: bounceOut; &#125; 评论显示User Agent 下载embed.js多说官方(已失效)下载我当前使用的 获取多说ID访问多说后台，http://duoshuo.com/settings/ ，点击你的用户名，地址栏中会出现如如下的ID地址http://duoshuo.com/profile/6232054888176550658/ 本地修改embed.js修改e.user_id为你的多说ID 123456789//管理员判断开始function sskadmin(e) &#123; var ssk = ''; if(e.user_id==6232054888176550658)&#123; ssk = '&lt;span class=\"sskadmin\"&gt;admin' &#125; return ssk+\"&lt;/span&gt; \";&#125;//管理员判断结束 上传embed.js我的做法是上传到GitHub,仓库的分支必须是gh-pages才行,master分支会失效,原因未知.如果你有服务器也可以上传到那. 修改多说调用地址多说调用文件为next\\layout\\_scripts\\comments\\duoshuo.swig其他主题估计差不多修改ds.src的js地址为你刚刚上传的地址 123456789101112&lt;script type=\"text/javascript\"&gt; var duoshuoQuery = &#123;short_name:\"&#123;&#123;duoshuo_shortname&#125;&#125;\"&#125;; (function() &#123; var ds = document.createElement('script'); ds.type = 'text/javascript';ds.async = true; ds.id = 'duoshuo-script'; ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//imeiji.info/gitDemo/embed.js'; ds.charset = 'UTF-8'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ds); &#125;)(); &lt;/script&gt; 自定义后台CSS 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140/*多说UA开始*/span.ua&#123; margin: 0 1px!important; color:#FFFFFF!important; /*text-transform: Capitalize!important; float: right!important; line-height: 18px!important;*/&#125;.ua_other.os_other&#123; background-color: #ccc!important; color: #fff; border: 1px solid #BBB!important; border-radius: 4px;&#125;.ua_ie&#123; background-color: #428bca!important; border-color: #357ebd!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_firefox&#123; background-color: #f0ad4e!important; border-color: #eea236!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_maxthon&#123; background-color: #7373B9!important; border-color: #7373B9!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_ucweb&#123; background-color: #FF740F!important; border-color: #d43f3a!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_sogou&#123; background-color: #78ACE9!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_2345explorer&#123; background-color: #2478B8!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_2345chrome&#123; background-color: #F9D024!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_mi&#123; background-color: #FF4A00!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_lbbrowser&#123; background-color: #FC9D2E!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_chrome&#123; background-color: #EE6252!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_qq&#123; background-color: #3D88A8!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_apple&#123; background-color: #E95620!important; border-color: #4cae4c!important; border-radius: 4px; padding: 0 5px!important;&#125;.ua_opera&#123; background-color: #d9534f!important; border-color: #d43f3a!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_vista,.os_2000,.os_windows,.os_xp,.os_7,.os_8,.os_8_1 &#123; background-color: #39b3d7!important; border-color: #46b8da!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_android &#123; background-color: #98C13D!important; border-color: #01B171!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_ubuntu&#123; background-color: #DD4814!important; border-color: #01B171!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_linux &#123; background-color: #3A3A3A!important; border-color: #1F1F1F!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_mac&#123; background-color: #666666!important; border-color: #1F1F1F!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_unix&#123; background-color: #006600!important; border-color: #1F1F1F!important; border-radius: 4px; padding: 0 5px!important;&#125;.os_nokia&#123; background-color: #014485!important; border-color: #1F1F1F!important; border-radius: 4px; padding: 0 5px!important;&#125;.sskadmin&#123;background-color: #00a67c!important; border-color: #01B171!important; border-radius: 4px; padding: 0 5px!important;&#125;/*多说UA结束*/ 站点访问计数 站点访问计数我使用的是不蒜子使用非常方便，只需一行脚本+一行标签 显示站点总访问量 我们使用的是hexo，所以要找到网站的布局文件，不同的主题的布局文件可能不一样，下面教程是针对NexT主题做出的修改。 找到站点的themes/next/layout/_partials目录下的footer.swig文件,将以下脚本和标签插入到文件中 1234&lt;script async src=\"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"&gt;&lt;/script&gt;本站总访问量 &lt;span id=\"busuanzi_value_site_pv\"&gt;&lt;/span&gt; &amp;nbsp&amp;nbsp&amp;nbsp您是第&lt;span id=\"busuanzi_value_site_uv\"&gt;&lt;/span&gt;个来到的小伙伴 插入到这里 1234567891011121314&lt;div class=\"powered-by\"&gt; &#123;&#123; __('footer.powered', '&lt;a class=\"theme-link\" href=\"http://hexo.io\"&gt;Hexo&lt;/a&gt;') &#125;&#125;&lt;/div&gt;&lt;div class=\"theme-info\"&gt; &#123;&#123; __('footer.theme') &#125;&#125; - &lt;a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\"&gt; NexT&#123;% if theme.scheme %&#125;.&#123;&#123; theme.scheme &#125;&#125;&#123;% endif %&#125; &lt;/a&gt;&lt;/div&gt;# 插入到这里&#123;% block footer %&#125;&#123;% endblock %&#125; 显示单页面访问量 不蒜子目前是不支持在首页显示每篇博文的计数的，而且NexT主题中，首页文章显示跟具体文章显示会用到同一个模板文件(themes/next/layout/_macro目录下的post.swig文件)，所以我们需要稍微修改一下模板的代码。 修改themes/next/layout/_macro目录下的post.swig文件位于文件开头,在第三个参数的位置,增加is_pv字段 1&#123;% macro render(post, is_index, is_pv, post_extra_class) %&#125; 插入以下代码，用于区分文章页面跟首页这里不用像”显示站点总访问量”中那样安装脚本，否则会出现重复计数的问题。 12345&#123;% if is_pv %&#125;&lt;span&gt;&amp;nbsp; | &amp;nbsp;&lt;span id=\"busuanzi_value_page_pv\" &gt;&lt;/span&gt;次阅读&lt;/span&gt; &#123;% endif %&#125; 插入这个位置 12345678910111213141516171819202122&#123;% if post.comments %&#125; &#123;% if (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&#125; &lt;span class=\"post-comments-count\"&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=\"&#123;&#123; url_for(post.path) &#125;&#125;#comments\" itemprop=\"discussionUrl\"&gt; &lt;span class=\"post-comments-count ds-thread-count\" data-thread-key=\"&#123;&#123; post.path &#125;&#125;\" itemprop=\"commentsCount\"&gt;&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &#123;% elseif theme.disqus_shortname %&#125; &lt;span class=\"post-comments-count\"&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=\"&#123;&#123; url_for(post.path) &#125;&#125;#comments\" itemprop=\"discussionUrl\"&gt; &lt;span class=\"post-comments-count disqus-comment-count\" data-disqus-identifier=\"&#123;&#123; post.path &#125;&#125;\" itemprop=\"commentsCount\"&gt;&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &#123;% endif %&#125; &#123;% endif %&#125; # 插入到这里 &lt;/div&gt; &lt;/header&gt; 修改themes/next/layout目录下的post.swig文件 这个文件是文章的模板找到以下代码，给render方法传入刚才第一步中设置的参数。 1234567891011121314151617&#123;% block content %&#125; &lt;div id=\"posts\" class=\"posts-expand\"&gt; #render方法第二个参数is_index为是否为首页 #第三个参数is_pv为我们刚才设置的是否显示计数 &#123;&#123; post_template.render(page, false, true) &#125;&#125; &lt;div class=\"post-spread\"&gt; &#123;% if theme.jiathis %&#125; &#123;% include '_partials/share/jiathis.swig' %&#125; &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125; &#123;% include '_partials/share/duoshuo_share.swig' %&#125; &#123;% endif %&#125; &lt;/div&gt; &lt;/div&gt;&#123;% endblock %&#125; 修改themes/next/layout目录下的index.swig文件这个文件是首页的模板找到以下代码，给render方法传入刚才第一步中设置的参数。 1234567891011&#123;% block content %&#125; &lt;section id=\"posts\" class=\"posts-expand\"&gt; &#123;% for post in page.posts %&#125; #render方法第二个参数is_index为是否为首页 #第三个参数is_pv为我们刚才设置的是否显示计数 &#123;&#123; post_template.render(post, true, false) &#125;&#125; &#123;% endfor %&#125; &lt;/section&gt; &#123;% include '_partials/pagination.swig' %&#125;&#123;% endblock %&#125; 至此，我们的站点计数功能就做好了~ 参考:多说评论也玩圆角头像动画「自定义CSS:无压力小白级教程」多说自定义CSS 让你的多说评论动感起来多说评论框UA显示/博主标记Hexo搭建GitHub博客（三）- NexT主题配置使用","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://imeiji.github.io/categories/Hexo/"}],"tags":[]},{"title":"Hello World","slug":"Hello World","date":"2015-12-25T06:10:54.000Z","updated":"2015-12-26T06:25:37.666Z","comments":true,"path":"2015/12/25/Hello World/","link":"","permalink":"https://imeiji.github.io/2015/12/25/Hello World/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Default","slug":"Default","permalink":"https://imeiji.github.io/categories/Default/"}],"tags":[]}]}